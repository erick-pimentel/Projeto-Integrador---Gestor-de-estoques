/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestorestoques;

import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ericz
 */
public class cadastroFornecedor extends javax.swing.JFrame {

    /**
     * Creates new form cadastroFornecedor
     */
    
    private String perfil;
    
    public cadastroFornecedor(String perfil) {
        initComponents();
        
        this.perfil=perfil;
        
        txt_fornecedorNome.setText("Insira o nome do fornecedor");
        txt_fornecedorNome.setForeground(Color.BLACK);
        
        txt_fornecedorCnpj.setText("Insira o CNPJ do fornecedor");
        txt_fornecedorCnpj.setForeground(Color.BLACK);

        txt_fornecedorContato.setText("Insira o contato do fornecedor");
        txt_fornecedorContato.setForeground(Color.BLACK);
                
        txt_fornecedorEmail.setText("Insira o E-mail do fornecedor");
        txt_fornecedorEmail.setForeground(Color.BLACK);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_fornecedorNome = new javax.swing.JTextField();
        txt_fornecedorCnpj = new javax.swing.JTextField();
        txt_fornecedorContato = new javax.swing.JTextField();
        txt_fornecedorEmail = new javax.swing.JTextField();
        btn_fornecedorExcluir = new javax.swing.JButton();
        btn_fornecedorVoltar = new javax.swing.JButton();
        btn_fornecedorCadastrar = new javax.swing.JButton();
        btn_fornecedorEditar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("CADASTRO DE FORNECEDOR");

        jLabel2.setText("NOME:");

        jLabel3.setText("CNPJ:");

        jLabel4.setText("CONTATO:");

        jLabel5.setText("E-MAIL:");

        txt_fornecedorNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_fornecedorNomeFocusLost(evt);
            }
        });
        txt_fornecedorNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_fornecedorNomeMousePressed(evt);
            }
        });

        txt_fornecedorCnpj.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_fornecedorCnpjFocusLost(evt);
            }
        });
        txt_fornecedorCnpj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_fornecedorCnpjMousePressed(evt);
            }
        });

        txt_fornecedorContato.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_fornecedorContatoFocusLost(evt);
            }
        });
        txt_fornecedorContato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_fornecedorContatoMousePressed(evt);
            }
        });

        txt_fornecedorEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_fornecedorEmailFocusLost(evt);
            }
        });
        txt_fornecedorEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_fornecedorEmailMousePressed(evt);
            }
        });

        btn_fornecedorExcluir.setBackground(new java.awt.Color(255, 0, 0));
        btn_fornecedorExcluir.setText("EXCLUIR");
        btn_fornecedorExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fornecedorExcluirActionPerformed(evt);
            }
        });

        btn_fornecedorVoltar.setBackground(new java.awt.Color(0, 200, 0));
        btn_fornecedorVoltar.setText("VOLTAR");
        btn_fornecedorVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fornecedorVoltarActionPerformed(evt);
            }
        });

        btn_fornecedorCadastrar.setBackground(new java.awt.Color(0, 255, 30));
        btn_fornecedorCadastrar.setText("CADASTRAR");
        btn_fornecedorCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fornecedorCadastrarActionPerformed(evt);
            }
        });

        btn_fornecedorEditar1.setBackground(new java.awt.Color(0, 255, 255));
        btn_fornecedorEditar1.setText("EDITAR");
        btn_fornecedorEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fornecedorEditar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_fornecedorEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(txt_fornecedorContato)
                            .addComponent(txt_fornecedorCnpj)
                            .addComponent(txt_fornecedorNome)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_fornecedorCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_fornecedorVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(btn_fornecedorEditar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_fornecedorExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_fornecedorNome)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_fornecedorCnpj)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_fornecedorContato)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_fornecedorEmail)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_fornecedorExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_fornecedorCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_fornecedorEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btn_fornecedorVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_fornecedorVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fornecedorVoltarActionPerformed
        menuView menu = new menuView(this.perfil);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_fornecedorVoltarActionPerformed

    private void txt_fornecedorNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_fornecedorNomeFocusLost
        if (txt_fornecedorNome.getText().isEmpty()) {
            txt_fornecedorNome.setText("Insira o nome do fornecedor");
            txt_fornecedorNome.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorNomeFocusLost

    private void txt_fornecedorNomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fornecedorNomeMousePressed
        if (txt_fornecedorNome.getText().equals("Insira o nome do fornecedor")) {
            txt_fornecedorNome.setText("");
            txt_fornecedorNome.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorNomeMousePressed

    private void txt_fornecedorCnpjFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_fornecedorCnpjFocusLost
        if (txt_fornecedorCnpj.getText().isEmpty()) {
            txt_fornecedorCnpj.setText("Insira o CNPJ do fornecedor");
            txt_fornecedorCnpj.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorCnpjFocusLost

    private void txt_fornecedorCnpjMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fornecedorCnpjMousePressed
        if (txt_fornecedorCnpj.getText().equals("Insira o CNPJ do fornecedor")) {
            txt_fornecedorCnpj.setText("");
            txt_fornecedorCnpj.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorCnpjMousePressed

    private void txt_fornecedorContatoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_fornecedorContatoFocusLost
        if (txt_fornecedorContato.getText().isEmpty()) {
            txt_fornecedorContato.setText("Insira o contato do fornecedor");
            txt_fornecedorContato.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorContatoFocusLost

    private void txt_fornecedorContatoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fornecedorContatoMousePressed
        if (txt_fornecedorContato.getText().equals("Insira o contato do fornecedor")) {
            txt_fornecedorContato.setText("");
            txt_fornecedorContato.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorContatoMousePressed

    private void txt_fornecedorEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_fornecedorEmailFocusLost
        if (txt_fornecedorEmail.getText().isEmpty()) {
            txt_fornecedorEmail.setText("Insira o E-mail do fornecedor");
            txt_fornecedorEmail.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorEmailFocusLost

    private void txt_fornecedorEmailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fornecedorEmailMousePressed
        if (txt_fornecedorEmail.getText().equals("Insira o E-mail do fornecedor")) {
            txt_fornecedorEmail.setText("");
            txt_fornecedorEmail.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_fornecedorEmailMousePressed

    private void btn_fornecedorCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fornecedorCadastrarActionPerformed
       String nome = txt_fornecedorNome.getText().trim();
       String cnpj = txt_fornecedorCnpj.getText().trim();
       String email = txt_fornecedorEmail.getText().trim();
       String contato = txt_fornecedorContato.getText().trim();
       
       if(nome.isEmpty() || cnpj.isEmpty() || email.isEmpty() || contato.isEmpty()){
           JOptionPane.showMessageDialog(this, "Preencha todos os campos!");
           return;
       }
       
       Connection conn = null;
       PreparedStatement pst = null;
       ResultSet rs = null;
       
       try {
           conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gestor_estoque", "root", "1234");

            // Verifica se o fornecedor já existe pelo CNPJ
            String sqlVerificar = "SELECT * FROM fornecedores WHERE cnpj_fornecedor = ?";
            pst = conn.prepareStatement(sqlVerificar);
            pst.setString(1, cnpj);
            rs = pst.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Fornecedor já cadastrado!");
            } else {
                // Inserir novo fornecedor
                String sqlInserir = "INSERT INTO fornecedores (nome_fornecedor, cnpj_fornecedor, email_fornecedor, contato_fornecedor) VALUES (?, ?, ?, ?)";
                pst = conn.prepareStatement(sqlInserir);
                pst.setString(1, nome);
                pst.setString(2, cnpj);
                pst.setString(3, email);
                pst.setString(4, contato);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Fornecedor cadastrado com sucesso!");

                // Limpa campos
                txt_fornecedorNome.setText("");
                txt_fornecedorCnpj.setText("");
                txt_fornecedorEmail.setText("");
                txt_fornecedorContato.setText("");
                
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar fornecedor: " + ex.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (conn != null) conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_fornecedorCadastrarActionPerformed

    private void btn_fornecedorEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fornecedorEditar1ActionPerformed
        String busca = JOptionPane.showInputDialog(this, "Informe o CNPJ ou Nome do fornecedor que deseja editar:");
        
        String url = "jdbc:mysql://localhost:3306/gestor_estoque"; 
        String usuario = "root"; 
        String senha = "1234";   

        Connection conn;
        try {
            conn = DriverManager.getConnection(url, usuario, senha);
            String sql = "SELECT * FROM fornecedores WHERE cnpj_fornecedor = ? OR nome_fornecedor = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, busca);
            ps.setString(2, busca);

            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                // Fornecedor encontrado, pergunta o que deseja editar
                String[] opcoes = {"Nome", "CNPJ", "Email", "Contato"};
                String campo = (String) JOptionPane.showInputDialog(
                        this, 
                        "Selecione o campo que deseja editar:", 
                        "Editar fornecedor", 
                        JOptionPane.QUESTION_MESSAGE, 
                        null, 
                        opcoes, 
                        opcoes[0]);

                if (campo != null) {
                    String novoValor = JOptionPane.showInputDialog(this, "Informe o novo valor para " + campo + ":");

                    if (novoValor != null && !novoValor.trim().isEmpty()) {
                        String colunaDB = switch(campo) {
                            case "Nome" -> "nome_fornecedor";
                            case "CNPJ" -> "cnpj_fornecedor";
                            case "Email" -> "email_fornecedor";
                            case "Contato" -> "contato_fornecedor";
                            default -> "";
                        };

                        String sqlUpdate = "UPDATE fornecedores SET " + colunaDB + " = ? WHERE id_fornecedor = ?";
                        PreparedStatement psUpdate = conn.prepareStatement(sqlUpdate);
                        psUpdate.setString(1, novoValor);
                        psUpdate.setInt(2, rs.getInt("id_fornecedor"));
                        psUpdate.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Fornecedor atualizado com sucesso!");
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Fornecedor não encontrado!");
            }
            
        } catch (SQLException e) {
            System.err.println("Erro ao conectar: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao acessar o banco de dados.");
        }
    }//GEN-LAST:event_btn_fornecedorEditar1ActionPerformed

    private void btn_fornecedorExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fornecedorExcluirActionPerformed
        
        String url = "jdbc:mysql://localhost:3306/gestor_estoque"; 
        String usuario = "root"; 
        String senha = "1234";   

        Connection conn;
        
        if ("Administrador".equals(perfil)){
           String dado = JOptionPane.showInputDialog(this, "Informe o CNPJ ou Nome do fornecedor a ser excluído:");

            if(dado != null && !dado.trim().isEmpty()){
                int confirm = JOptionPane.showConfirmDialog(this, 
                                "Tem certeza que deseja excluir o fornecedor: " + dado + "?",
                                "Confirmar exclusão",
                                JOptionPane.YES_NO_OPTION);

                if(confirm == JOptionPane.YES_OPTION){
                    String sql = "DELETE FROM fornecedores WHERE CNPJ_fornecedor = ? OR nome_fornecedor = ?";

                    try {

                        conn = DriverManager.getConnection(url, usuario, senha);
                        PreparedStatement pst = conn.prepareStatement(sql);
                        
                        pst.setString(1, dado);
                        pst.setString(2, dado);

                        int linhasAfetadas = pst.executeUpdate();

                        if(linhasAfetadas > 0){
                            JOptionPane.showMessageDialog(this, "Fornecedor excluído com sucesso!");
                        } else {
                            JOptionPane.showMessageDialog(this, "Fornecedor não encontrado.");
                        }

                    } catch(SQLException e){
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Erro ao acessar o banco: " + e.getMessage());
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Você não tem permissão para excluir um fornecedor.");
        }
    }//GEN-LAST:event_btn_fornecedorExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastroFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastroFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastroFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastroFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_fornecedorCadastrar;
    private javax.swing.JButton btn_fornecedorEditar1;
    private javax.swing.JButton btn_fornecedorExcluir;
    private javax.swing.JButton btn_fornecedorVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txt_fornecedorCnpj;
    private javax.swing.JTextField txt_fornecedorContato;
    private javax.swing.JTextField txt_fornecedorEmail;
    private javax.swing.JTextField txt_fornecedorNome;
    // End of variables declaration//GEN-END:variables
}
